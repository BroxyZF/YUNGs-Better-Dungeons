buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
//        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Maven info
archivesBaseName = project.archives_base_name
version = "${minecraft_version}-${mod_version}"
group = project.maven_group

minecraft {
    mappings channel: "official", version: "${minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=" + mod_id + ".mixins.json"
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
//            property 'mixin.env.disableRefMap', 'true'
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
//            property 'forge.logging.console.level', 'debug'

            mods { betterdungeons { source sourceSets.main } }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=" + mod_id + ".mixins.json"
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
//            property 'mixin.env.disableRefMap', 'true'
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
//            property 'forge.logging.console.level', 'debug'

            mods { betterdungeons { source sourceSets.main } }
        }

        data {
            workingDirectory project.file('run')
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
//            property 'forge.logging.console.level', 'debug'

            args '--mod', project.getProperty('mod_id'), '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods { betterdungeons { source sourceSets.main } }
        }
    }
}

//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("com.yungnickyoung.minecraft.yungsapi:YungsApi:${yungs_api_version}")
//    implementation fg.deobf(files("libs/YungsApi-1.18.1-Forge-22.jar"))
    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    }
}

jar {
    from('/') {
        include 'LICENSE'
    }

    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : "YUNGNICKYOUNG",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "YUNGNICKYOUNG",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Signing-Fingerprint"     : project.hasProperty('signSHA1') ? project.findProperty('signSHA1') : "unsigned",
                "MixinConfigs": "${mod_id}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
}